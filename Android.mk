#
# Copyright (C) 2024 The LineageOS Project
#
# SPDX-License-Identifier: Apache-2.0
#

LOCAL_PATH := $(call my-dir)

ifeq ($(USES_DEVICE_INTEL_BARRYTRAIL),true)

# Combine ramdisk
INSTALLED_COMBINED_RAMDISK_TARGET := $(PRODUCT_OUT)/combined-ramdisk.img
INSTALLED_COMBINED_RAMDISK_TARGET_DEPS := $(PRODUCT_OUT)/ramdisk.img $(PRODUCT_OUT)/vendor_ramdisk.img
INSTALLED_COMBINED_RAMDISK_RECOVERY_TARGET := $(PRODUCT_OUT)/combined-ramdisk-recovery.img
INSTALLED_COMBINED_RAMDISK_RECOVERY_TARGET_DEPS := $(PRODUCT_OUT)/ramdisk-recovery.img $(PRODUCT_OUT)/vendor_ramdisk.img

$(INSTALLED_COMBINED_RAMDISK_TARGET): $(INSTALLED_COMBINED_RAMDISK_TARGET_DEPS)
	cat $^ > $@

$(INSTALLED_COMBINED_RAMDISK_RECOVERY_TARGET): $(INSTALLED_COMBINED_RAMDISK_RECOVERY_TARGET_DEPS)
	cat $^ > $@

.PHONY: combined-ramdisk
combined-ramdisk: $(INSTALLED_COMBINED_RAMDISK_TARGET)

.PHONY: combined-ramdisk-recovery
combined-ramdisk-recovery: $(INSTALLED_COMBINED_RAMDISK_RECOVERY_TARGET)

# Create mmcblk disk image
SGDISK_EXEC := out/host/linux-x86/bin/sgdisk

DISK_MMCBLK_SECTOR_SIZE := 512
ifeq ($(BOARD_SUPER_PARTITION_SIZE),3221225472)
	DISK_MMCBLK_SECTORS := 8388608
	DISK_MMCBLK_PARTITION_EFI_START_SECTOR := 2048
	DISK_MMCBLK_PARTITION_SUPER_START_SECTOR := 264192
	DISK_MMCBLK_PARTITION_MISC_START_SECTOR := 6555648
	DISK_MMCBLK_PARTITION_METADATA_START_SECTOR := 6557696
	DISK_MMCBLK_PARTITION_CACHE_START_SECTOR := 6623232
	DISK_MMCBLK_PARTITION_BOOT_START_SECTOR := 6725632
	DISK_MMCBLK_PARTITION_RECOVERY_START_SECTOR := 6856704
	DISK_MMCBLK_PARTITION_EFI_SECTORS := 262144
	DISK_MMCBLK_PARTITION_SUPER_SECTORS := 6291456
	DISK_MMCBLK_PARTITION_MISC_SECTORS := 2048
	DISK_MMCBLK_PARTITION_METADATA_SECTORS := 65536
	DISK_MMCBLK_PARTITION_CACHE_SECTORS := 102400
	DISK_MMCBLK_PARTITION_BOOT_SECTORS := 131072
	DISK_MMCBLK_PARTITION_RECOVERY_SECTORS := 131072
else ifeq ($(BOARD_SUPER_PARTITION_SIZE),4294967296)
	DISK_MMCBLK_SECTORS := 10485760
	DISK_MMCBLK_PARTITION_EFI_START_SECTOR := 2048
	DISK_MMCBLK_PARTITION_SUPER_START_SECTOR := 264192
	DISK_MMCBLK_PARTITION_MISC_START_SECTOR := 8663040
	DISK_MMCBLK_PARTITION_METADATA_START_SECTOR := 8665088
	DISK_MMCBLK_PARTITION_CACHE_START_SECTOR := 8730624
	DISK_MMCBLK_PARTITION_BOOT_START_SECTOR := 8834816
	DISK_MMCBLK_PARTITION_RECOVERY_START_SECTOR := 8965888
	DISK_MMCBLK_PARTITION_EFI_SECTORS := 262144
	DISK_MMCBLK_PARTITION_SUPER_SECTORS := 8388608
	DISK_MMCBLK_PARTITION_MISC_SECTORS := 2048
	DISK_MMCBLK_PARTITION_METADATA_SECTORS := 65536
	DISK_MMCBLK_PARTITION_CACHE_SECTORS := 102400
	DISK_MMCBLK_PARTITION_BOOT_SECTORS := 131072
	DISK_MMCBLK_PARTITION_RECOVERY_SECTORS := 131072
else
	$(error Unsupported BOARD_SUPER_PARTITION_SIZE for mmcblk disk image creation)
endif

DISK_MMCBLK_WRITE_PARTITIONS := \
	$(BOARD_CUSTOMIMAGES_PARTITION_LIST) \
	super \
	cache \
	boot \
	recovery

# $(1): output file
# $(2): disk name
define make-diskimage-target
	$(call pretty,"Target $(2) disk image: $(1)")
	/bin/dd if=/dev/zero of=$(1) bs=$(DISK_$(call to-upper,$(2))_SECTOR_SIZE) count=$(DISK_$(call to-upper,$(2))_SECTORS)
	/bin/sh -e $(DEVICE_PATH)/config/create_partition_table.sh $(SGDISK_EXEC) $(1) $(2) $(BOARD_SUPER_PARTITION_SIZE)
	$(foreach p,$(DISK_$(call to-upper,$(2))_WRITE_PARTITIONS),\
		/bin/dd if=$(PRODUCT_OUT)/$(p).img of=$(1) bs=$(DISK_$(call to-upper,$(2))_SECTOR_SIZE) seek=$(DISK_$(call to-upper,$(2))_PARTITION_$(call to-upper,$(p))_START_SECTOR) count=$(DISK_$(call to-upper,$(2))_PARTITION_$(call to-upper,$(p))_SECTORS) conv=notrunc &&\
	)true
endef

INSTALLED_DISKIMAGE_MMCBLK_TARGET := $(PRODUCT_OUT)/disk-mmcblk.img
INSTALLED_DISKIMAGE_MMCBLK_TARGET_DEPS := $(SGDISK_EXEC)
$(foreach p,$(DISK_MMCBLK_WRITE_PARTITIONS),\
	$(eval INSTALLED_DISKIMAGE_MMCBLK_TARGET_DEPS += $(PRODUCT_OUT)/$(p).img))
$(INSTALLED_DISKIMAGE_MMCBLK_TARGET): $(INSTALLED_DISKIMAGE_MMCBLK_TARGET_DEPS)
	$(call make-diskimage-target,$(INSTALLED_DISKIMAGE_MMCBLK_TARGET),mmcblk)

.PHONY: diskimage-mmcblk
diskimage-mmcblk: $(INSTALLED_DISKIMAGE_MMCBLK_TARGET)

.PHONY: diskimage-mmcblk-nodeps
diskimage-mmcblk-nodeps:
	@echo "make $(INSTALLED_DISKIMAGE_MMCBLK_TARGET): ignoring dependencies"
	$(call make-diskimage-target,$(INSTALLED_DISKIMAGE_MMCBLK_TARGET),mmcblk)


# Create prebuilt kernel repo
ifneq ($(LINEAGE_BUILD),)
ifneq ($(wildcard $(TARGET_KERNEL_SOURCE)/Makefile),)
INSTALLED_PREBUILT_KERNEL_REPO_DIR := out/kernel-barrytrail/$(TARGET_PREBUILT_KERNEL_USE)

INSTALLED_PREBUILT_KERNEL_REPO_KERNEL_TARGET := $(INSTALLED_PREBUILT_KERNEL_REPO_DIR)/kernel
$(INSTALLED_PREBUILT_KERNEL_REPO_KERNEL_TARGET): $(PRODUCT_OUT)/kernel
	$(call pretty,"Target prebuilt kernel repo: $@")
	mkdir -p $(INSTALLED_PREBUILT_KERNEL_REPO_DIR)
	rm -f $(INSTALLED_PREBUILT_KERNEL_REPO_DIR)/*.ko
	if grep -q '=m' $(PRODUCT_OUT)/obj/KERNEL_OBJ/.config; then\
		cp `find $(PRODUCT_OUT)/obj/KERNEL_OBJ/ -type f -name "*.ko"` $(INSTALLED_PREBUILT_KERNEL_REPO_DIR)/;\
	fi
	cp $(PRODUCT_OUT)/kernel $@

.PHONY: prebuilt-kernel-repo
prebuilt-kernel-repo: $(INSTALLED_PREBUILT_KERNEL_REPO_KERNEL_TARGET)
endif # $(TARGET_KERNEL_SOURCE)/Makefile
endif # LINEAGE_BUILD

# Firmware mount point
FIRMWARE_MOUNT_POINT := $(TARGET_OUT_VENDOR)/firmware_mnt
ALL_DEFAULT_INSTALLED_MODULES += $(FIRMWARE_MOUNT_POINT)

$(FIRMWARE_MOUNT_POINT):
	@echo "Creating $(FIRMWARE_MOUNT_POINT)"
	@mkdir -p $(TARGET_OUT_VENDOR)/firmware_mnt

# Include other makefiles
include $(call all-makefiles-under,$(LOCAL_PATH))

# Wi-Fi
include external/wpa_supplicant_8/wpa_supplicant/wpa_supplicant_conf.mk

endif
